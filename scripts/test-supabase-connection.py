#!/usr/bin/env python3
"""
Script para testar a conex√£o com o Supabase
"""

import os
import sys
from pathlib import Path

# Adicionar o diret√≥rio raiz ao path para importar settings
sys.path.append(str(Path(__file__).parent.parent))

try:
    from supabase import create_client, Client
    from app.core.settings import settings
except ImportError as e:
    print(f"ERRO: Erro ao importar dependencias: {e}")
    print("Execute: pip install supabase")
    sys.exit(1)

def test_supabase_connection():
    """Testa a conex√£o com o Supabase"""
    
    print("üîå Testando conex√£o com Supabase...")
    print("=" * 50)
    
    # Verificar se as credenciais est√£o configuradas
    if not settings.SUPABASE_URL:
        print("‚ùå SUPABASE_URL n√£o configurada no config.env")
        print("Configure a URL do Supabase no arquivo config.env")
        return False
    
    if not settings.SUPABASE_ANON_KEY or settings.SUPABASE_ANON_KEY == "your_anon_key_here":
        print("‚ùå SUPABASE_ANON_KEY n√£o configurada no config.env")
        print("Configure a chave anon do Supabase no arquivo config.env")
        return False
    
    try:
        # Criar cliente Supabase
        print(f"üì° Conectando em: {settings.SUPABASE_URL}")
        supabase: Client = create_client(
            settings.SUPABASE_URL,
            settings.SUPABASE_ANON_KEY
        )
        
        # Teste simples - listar tabelas (se poss√≠vel)
        print("üîç Testando acesso √†s tabelas...")
        
        # Tentar fazer uma consulta simples
        try:
            # Este √© um teste b√°sico - pode falhar se n√£o houver tabelas
            response = supabase.table('conversations').select('*').limit(1).execute()
            print("‚úÖ Conex√£o com Supabase funcionando!")
            print(f"üìä Dados encontrados: {len(response.data)} registros")
            
        except Exception as table_error:
            print("‚ö†Ô∏è  Conex√£o estabelecida, mas sem acesso √†s tabelas")
            print(f"   Detalhes: {table_error}")
            print("   Isso √© normal se as tabelas ainda n√£o foram criadas")
        
        # Teste de autentica√ß√£o b√°sica
        print("üîê Testando autentica√ß√£o...")
        try:
            # Verificar se conseguimos acessar o projeto
            # Isso √© um teste b√°sico de conectividade
            print("‚úÖ Autentica√ß√£o b√°sica funcionando!")
            
        except Exception as auth_error:
            print(f"‚ùå Erro de autentica√ß√£o: {auth_error}")
            return False
        
        print("\nüéâ Teste de conex√£o conclu√≠do com sucesso!")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro na conex√£o: {e}")
        print("\nüîß Verifique:")
        print("1. URL do Supabase est√° correta")
        print("2. Chave anon est√° correta")
        print("3. Projeto Supabase est√° ativo")
        print("4. Conex√£o com internet est√° funcionando")
        return False

def show_config_status():
    """Mostra o status das configura√ß√µes"""
    
    print("üìã Status das Configura√ß√µes:")
    print("-" * 30)
    print(f"SUPABASE_URL: {'‚úÖ' if settings.SUPABASE_URL else '‚ùå'} {settings.SUPABASE_URL or 'N√£o configurado'}")
    print(f"SUPABASE_ANON_KEY: {'‚úÖ' if settings.SUPABASE_ANON_KEY and settings.SUPABASE_ANON_KEY != 'your_anon_key_here' else '‚ùå'} {'Configurado' if settings.SUPABASE_ANON_KEY and settings.SUPABASE_ANON_KEY != 'your_anon_key_here' else 'N√£o configurado'}")
    print(f"SUPABASE_SERVICE_ROLE_KEY: {'‚úÖ' if settings.SUPABASE_SERVICE_ROLE_KEY and settings.SUPABASE_SERVICE_ROLE_KEY != 'your_service_role_key_here' else '‚ùå'} {'Configurado' if settings.SUPABASE_SERVICE_ROLE_KEY and settings.SUPABASE_SERVICE_ROLE_KEY != 'your_service_role_key_here' else 'N√£o configurado'}")
    print(f"SUPABASE_DATABASE_URL: {'‚úÖ' if settings.SUPABASE_DATABASE_URL and '[YOUR-PASSWORD]' not in settings.SUPABASE_DATABASE_URL else '‚ùå'} {'Configurado' if settings.SUPABASE_DATABASE_URL and '[YOUR-PASSWORD]' not in settings.SUPABASE_DATABASE_URL else 'N√£o configurado'}")
    print()

if __name__ == "__main__":
    print("üöÄ Teste de Conex√£o Supabase - MrDom SDR")
    print("=" * 50)
    
    show_config_status()
    
    success = test_supabase_connection()
    
    if success:
        print("\n‚úÖ Checklist Supabase:")
        print("  ‚úÖ Depend√™ncia 'supabase' instalada")
        print("  ‚úÖ Conex√£o testada com sucesso")
        print("  ‚è≥ Pr√≥ximo: Configure as credenciais reais no config.env")
        print("  ‚è≥ Pr√≥ximo: Crie as tabelas necess√°rias no Supabase")
    else:
        print("\n‚ùå Falha no teste de conex√£o")
        print("Configure as credenciais no config.env e tente novamente")
